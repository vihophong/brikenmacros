/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "Riostream.h"

#include "fitF.hh"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"

ClassImp(fitF)

 fitF::fitF(const char *name, const char *title,
                        RooAbsReal& _x,
                        RooAbsCategory& _y,
                        RooAbsReal& _l0,
                        RooAbsReal *_pp[]) :
   RooAbsPdf(name,title),
   x("x","x",this,_x),
   y("y","y",this,_y),
   neueff("l0","l0",this,_l0)
 {
    Int_t nri=10;
    for (Int_t i=0;i<nri;i++){
        p[i]=new RooRealProxy(Form("p%d",i),Form("p%d",i),this,*_pp[i]);
    }
 }


 fitF::fitF(const fitF& other, const char* name) :
   RooAbsPdf(other,name),
   x("x",this,other.x),
   y("y",this,other.y),
   neueff("l0",this,other.neueff)
 {
     Int_t nri=10;
     for (Int_t i=0;i<nri;i++){
         p[i]=new RooRealProxy(Form("p%d",i),this,*other.p[i]);
     }
 }



 Double_t fitF::evaluate() const
 {
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
     if (y==1){
         return exp(-neueff*x);
     }else if (y==2){
         return 2*exp(-neueff*x);
     }else{
         return 4*exp(-neueff*x);
     }
 }



