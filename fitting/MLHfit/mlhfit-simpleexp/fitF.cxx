/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

// Your description goes here...

#include "Riostream.h"

#include "fitF.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include <math.h>
#include "TMath.h"

ClassImp(fitF)

 fitF::fitF(const char *name, const char *title,
                        RooAbsReal& _x,
                        RooAbsCategory& _y,
                        RooAbsReal& _l0,
                        RooAbsReal& _p1n,
                        RooAbsReal& _p2n) :
   RooAbsPdf(name,title),
   x("x","x",this,_x),
   y("y","y",this,_y),
   l0("l0","l0",this,_l0),
   p1n("p1n","p1n",this,_p1n),
   p2n("p2n","p2n",this,_p2n)
 {
 }


 fitF::fitF(const fitF& other, const char* name) :
   RooAbsPdf(other,name),
   x("x",this,other.x),
   y("y",this,other.y),
   l0("l0",this,other.l0),
   p1n("p1n",this,other.p1n),
   p2n("p2n",this,other.p2n)
 {
 }



 Double_t fitF::evaluate() const
 {
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
     if (y==1){
         return p1n*exp(-l0*x);
     }else if (y==2){
         return p2n*exp(-l0*x);
     }else{
         return (1-p1n-p2n)*exp(-l0*x);
     }
 }



