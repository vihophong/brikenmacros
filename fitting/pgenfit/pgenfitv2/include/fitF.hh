/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef FITF
#define FITF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "common.hh"

#define MAX_N_PARMS 200
class fitF : public RooAbsPdf {
public:
  fitF() {} ;
  fitF(const char *name, const char *title,
              RooAbsReal& _x, RooAbsCategory &_y,
              RooAbsReal& _neueff,  RooAbsReal* _pp[]);
  fitF(const fitF& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new fitF(*this,newname); }
  inline virtual ~fitF() { }

protected:
  RooRealProxy x ;
  RooCategoryProxy y ;
  RooRealProxy neueff ;
  RooRealProxy* p[MAX_N_PARMS];
  Double_t evaluate() const ;

  path* fpath;
  Double_t corefcn(Int_t ndecay,Int_t*  idecaymap,Int_t*  inneu,Double_t* production_yield, Double_t* b1n,Double_t* b2n,Double_t* lamda,Double_t N0,Double_t t) const;
  Double_t fcn_decay(Double_t *x, Double_t *par) const;
  Double_t fcn_1ndecay(Double_t *x, Double_t *par) const;
  Double_t fcn_2ndecay(Double_t *x, Double_t *par) const;
private:
  ClassDef(fitF,1) // Your description goes here...
};

class fitFbkg : public RooAbsPdf {
public:
  fitFbkg() {} ;
  fitFbkg(const char *name, const char *title,
              RooAbsReal& _x,
              RooAbsCategory& _y,
              RooAbsReal& _bkg1,
              RooAbsReal& _bkg2,
              RooAbsReal& _slope1,
              RooAbsReal& _slope2,
              RooAbsReal& _slope3);
  fitFbkg(const fitFbkg& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new fitFbkg(*this,newname); }
  inline virtual ~fitFbkg() { }

protected:

  RooRealProxy x ;
  RooCategoryProxy y ;
  RooRealProxy bkg1 ;
  RooRealProxy bkg2 ;
  RooRealProxy slope1 ;
  RooRealProxy slope2 ;
  RooRealProxy slope3 ;

  Double_t evaluate() const ;

private:

  ClassDef(fitFbkg,1) // Your description goes here...
};

#endif
