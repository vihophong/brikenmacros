/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            *
 *****************************************************************************/

#ifndef FITF
#define FITF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "RooRealVar.h"


#include "fitFunctions.h"


class fitF : public RooAbsPdf {
public:
  fitF() {}
  fitF(const char *name, const char *title,
              RooAbsReal& _x,
              RooAbsCategory& _y,
              RooAbsReal& _ineueff,
              char* parmsfilename);
  fitF(const fitF& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new fitF(*this,newname); }
  inline virtual ~fitF() { }

  RooRealVar* getDecayParms(Int_t parNo){return _p[parNo];}

  RooRealProxy* getDecayParmsProxy(Int_t parNo){return p[parNo];}

protected:

  RooRealProxy x ;
  RooCategoryProxy y ;
  RooRealProxy ineueff ;

  RooRealProxy *p[kmaxparms];

  //! decay parameters
  RooRealVar* _p[kmaxparms];

  Double_t evaluate() const ; 

private:

  ClassDef(fitF,1) // Your description goes here...
};

#endif
